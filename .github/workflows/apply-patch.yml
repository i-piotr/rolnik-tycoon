name: Apply Patch

on:
  workflow_dispatch:
    inputs:
      patch:
        description: "Wklej tre≈õƒá ≈Çatki (unified diff: diff --git / --- / +++)"
        required: false
        type: string
      patch_b64:
        description: "ALTERNATYWA: ta sama ≈Çatka, ale zakodowana base64"
        required: false
        type: string
      patch_url:
        description: "ALTERNATYWA: URL do surowego pliku z ≈ÇatkƒÖ (RAW)"
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (pe≈Çna historia)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ustaw to≈ºsamo≈õƒá Gita
        run: |
          git config user.name "grazynka-bot"
          git config user.email "bot@example.local"

      - name: Pobierz / zbuduj patch.diff
        shell: bash
        env:
          PATCH_RAW: ${{ github.event.inputs.patch }}
          PATCH_B64: ${{ github.event.inputs.patch_b64 }}
          PATCH_URL: ${{ github.event.inputs.patch_url }}
        run: |
          set -euo pipefail
          if [ -n "${PATCH_URL:-}" ]; then
            echo "Tryb: URL"
            curl -fsSL "$PATCH_URL" -o patch.diff
          elif [ -n "${PATCH_B64:-}" ]; then
            echo "Tryb: base64"
            echo "$PATCH_B64" | base64 -d > patch.diff
          elif [ -n "${PATCH_RAW:-}" ]; then
            echo "Tryb: RAW tekst"
            printf '%s' "$PATCH_RAW" > patch.diff
          else
            echo "üö´ Nie podano ≈ºadnego wej≈õcia (patch/patch_b64/patch_url)."
            exit 1
          fi

          echo "Patch bytes: $(wc -c < patch.diff)"
          echo "Patch head:"
          sed -n '1,12p' patch.diff || true

          # sanity: sprawd≈∫, ≈ºe wyglƒÖda jak unified diff
          if ! grep -Eq '^(diff --git|--- |\+\+\+ )' patch.diff; then
            echo "üö´ To nie wyglƒÖda na unified diff. Upewnij siƒô, ≈ºe zaczyna siƒô od 'diff --git ...'"
            exit 1
          fi

      - name: Na≈Ç√≥≈º ≈Çatkƒô na nowƒÖ ga≈ÇƒÖ≈∫ (3-way ‚Üí reject)
        shell: bash
        run: |
          set -euxo pipefail
          BR="grazynka/patch-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}"
          git switch -C "$BR"

          if git apply --3way --whitespace=nowarn patch.diff; then
            echo "‚úÖ git apply --3way OK"
          else
            echo "‚ö†Ô∏è 3-way failed, pr√≥bujƒô --reject"
            git apply --reject --whitespace=nowarn patch.diff
            if compgen -G "**/*.rej" > /dev/null; then
              echo "‚ùå Powsta≈Çy *.rej (konflikty). Przerywam."
              find . -name '*.rej' -print
              exit 1
            fi
          fi

          git add -A
          if git diff --staged --quiet; then
            echo "‚ùå Nothing to commit ‚Äî patch nic nie zmieni≈Ç (albo ju≈º zastosowany)."
            exit 1
          fi
          git commit -m "Gra≈ºynka patch ${GITHUB_RUN_ID}"
          git push -u origin "$BR"

      - name: Otw√≥rz Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          BRANCH_NAME: gra≈ºynka/patch-${{ github.run_id }}-${{ github.run_attempt }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const head = `grazynka/patch-${process.env.GITHUB_RUN_ID}-${process.env.GITHUB_RUN_ATTEMPT}`;
            const { data: pr } = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Gra≈ºynka: patch ${context.runId}`,
              head,
              base: "main",
              body: "Automatycznie utworzony PR z ≈ÇatkƒÖ od Gra≈ºynki."
            });
            core.notice(`PR utworzony: ${pr.html_url}`);
