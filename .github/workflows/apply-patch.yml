name: Apply Patch

on:
  workflow_dispatch:
    inputs:
      patch_b64:
        description: "Base64-encoded unified diff (diff --git / --- / +++)"
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "grazynka-bot"
          git config user.email "bot@example.local"

      - name: Decode patch
        shell: bash
        run: |
          set -euo pipefail
          echo "${{ github.event.inputs.patch_b64 }}" | tr -d ' \t\r\n' | base64 -d > patch.diff
          echo "Patch bytes: $(wc -c < patch.diff)"
          echo "Patch head:"; sed -n '1,12p' patch.diff || true
          grep -Eq '^(diff --git|--- |\+\+\+ )' patch.diff || { echo "Not a unified diff"; exit 1; }

      - name: Create branch and apply
        shell: bash
        env:
          BRANCH: grazynka/patch-${{ github.run_id }}-${{ github.run_attempt }}
        run: |
          set -euxo pipefail
          git switch -C "$BRANCH"
          git apply --3way --whitespace=nowarn patch.diff || git apply --reject --whitespace=nowarn patch.diff
          if compgen -G "**/*.rej" > /dev/null; then
            echo "Conflicts (*.rej):"; find . -name '*.rej' -print; exit 1;
          fi
          git add -A
          if git diff --staged --quiet; then echo "Nothing to commit"; exit 1; fi
          git commit -m "Apply patch ${{ github.run_id }}"
          git push -u origin "$BRANCH"
          # zapisz nazwę gałęzi dla kolejnych kroków
          echo "BRANCH=$BRANCH" >> "$GITHUB_ENV"

      - name: Open PR (gh CLI)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "Patch ${{ github.run_id }}" \
            --body "Auto PR from Apply Patch workflow." \
            --head "$BRANCH" \
            --base "main"
